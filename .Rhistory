source("~/Desktop/gpvolatility/experiments/test_script.R")
test
test %>% plot.ts
rapcf(test) -> res
source("~/Desktop/gpvolatility/experiments/test_script.R")
rapcf(test[1:200], burn_in = 100) -> res
rapcf(test[1:130], burn_in = 100) -> res
View(res)
res[["weights"]]
res[["weights"]] %>% sum
res[["states"]]
res[["states"]][130,]
res[["states"]][129,]
res[["states"]][128,]
res[["states"]][128,] %>% mean
res[["states"]][128,]* res[["states"]]
res[["states"]][128,] %*% res[["states"]]
res[["states"]][128,] * res[["states"]]
res[["states"]][128,] * res[["weights"]]
res[["states"]][128,] * res[["weights"]] %>% mean
(res[["states"]][128,] * res[["weights"]]) %>% mean
(res[["states"]][126,] * res[["weights"]]) %>% mean
(res[["states"]][127,] * res[["weights"]]) %>% mean
source("~/Desktop/gpvolatility/R/rapcf.R")
rapcf(test[1:105], burn_in = 100) -> res
View(res)
res[["weights"]]
res[["weights"]] %>% exp
res[["weights"]] %>% exp %>% sum
source("~/Desktop/gpvolatility/experiments/test_script.R")
remove(list=ls())
source("~/Desktop/gpvolatility/experiments/test_script.R")
source("~/Desktop/gpvolatility/R/rapcf.R")
rapcf(test[1:103], burn_in = 100) -> res
source("~/Desktop/gpvolatility/R/rapcf.R")
rapcf(test[1:103], burn_in = 100) -> res
source("~/Desktop/gpvolatility/R/rapcf.R")
rapcf(test[1:103], burn_in = 100) -> res
res
res %>% exp
source("~/Desktop/gpvolatility/R/rapcf.R")
source("~/Desktop/gpvolatility/R/rapcf.R")
rapcf(test[1:103], burn_in = 100) -> res
View(res)
res[["predictive_likelihood"]]
source("~/Desktop/gpvolatility/R/rapcf.R")
source("~/Desktop/gpvolatility/R/rapcf.R")
source("~/Desktop/gpvolatility/R/rapcf.R")
res[["predictive_likelihood"]]
rapcf(test[1:103], burn_in = 100) -> res
View(res)
res[["predictive_likelihood"]]
res[["predictive_likelihood"]] %>% as.data.frame() %>% View
source("~/Desktop/gpvolatility/R/rapcf.R")
source("~/Desktop/gpvolatility/R/rapcf.R")
rapcf(test[1:105], burn_in = 100) -> res
source("~/Desktop/gpvolatility/R/rapcf.R")
rapcf(test[1:105], burn_in = 100) -> res
source("~/Desktop/gpvolatility/R/rapcf.R")
rapcf(test[1:105], burn_in = 100) -> res
View(res)
res[["predictive_likelihood"]]
